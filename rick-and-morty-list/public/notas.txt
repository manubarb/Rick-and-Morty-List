Para o home.js 
- link do projeto: https://github.com/academygrowdev-leticialeal/bootcamp/blob/main/prototipo-2/js/index.js
- no início testar: document.addEventListener('DOMContentLoaded', function() {})

PENDENCIAS:

- PAGINAÇAO
-- adicionar mt-5 no nav de home.html
-- esse é o html gerado na funçao renderPagination: 
<nav id="pagination">
  <ul class="pagination justify-content-center">
    <!-- Botão Anterior -->
    <li class="page-item disabled">  <!-- disabled é adicionado quando não há prevPage -->
      <button type="button" class="page-link">Anterior</button>
    </li>
    
    <!-- Botão Próxima -->
    <li class="page-item">  <!-- disabled é adicionado quando não há nextPage -->
      <button type="button" class="page-link">Próxima</button>
    </li>
  </ul>
</nav>

-- mudar as cores na funçao renderPagination:
  nav.classList.add("bg-dark", "pagination-dark");
  ul.classList.add("pagination", "justify-content-center", "dark-pagination");

-- mudar as cores css:
/* Estilo para o paginador escuro */
.bg-dark.pagination-dark {
  background-color: #343a40 !important;
  padding: 1rem;
  border-radius: 0.25rem;
}
.dark-pagination .page-item .page-link {
  background-color: #495057;
  border-color: #6c757d;
  color: #4CAF50 !important; /* Cor do texto */
}
.dark-pagination .page-item.disabled .page-link {
  background-color: #343a40;
  border-color: #6c757d;
  color: #6c757d !important;
}
.dark-pagination .page-item:not(.disabled):hover .page-link {
  background-color: #6c757d;
  color: white !important;
}

- CARDS CLICAVEIS
-- adicionar na segunda div do card de renderCharactersList:
    <div class="card default-card fundo-card card-sm clickable-card" data-character-id="${character.id}" style="cursor: pointer;">
-- funçao pra tornar clicavel
function makeCardsClickable() {
  const cards = document.querySelectorAll('.clickable-card');
  
  cards.forEach(card => {
    card.addEventListener('click', function() {
      const characterId = this.getAttribute('data-character-id');
      viewCharacterDetail(characterId);
    });
    
    // Efeito hover opcional
    card.addEventListener('mouseenter', function() {
      this.style.transform = 'scale(1.02)';
      this.style.transition = 'transform 0.2s ease';
    });
    
    card.addEventListener('mouseleave', function() {
      this.style.transform = 'scale(1)';
    });
  });
}
-- chamar a funçao para deixar clicavel dentro de renderPageCharacters
async function renderPageCharacters(page = 1) {
  const result = await listCharactersByPage(page);

  if (result?.charactersList) {
    renderCharactersList(result.charactersList);
    makeCardsClickable(); 
  }
}
- ANIMAÇAO
-- adicionar a classe floating-card no card de detail
